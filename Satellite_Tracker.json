[
    {
        "id": "1caca5541439e971",
        "type": "tab",
        "label": "Satellite Tracker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "499c1dd27397b9e3",
        "type": "http in",
        "z": "1caca5541439e971",
        "name": "",
        "url": "/botchat",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "0c4d7a8cb30996f9"
            ]
        ]
    },
    {
        "id": "0c4d7a8cb30996f9",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "Process chat input",
        "func": "// stash away incoming data\nmsg.mydata = {};\nmsg.mydata.messagein = msg.req.body.msgdata;\nmsg.payload = msg.mydata.messagein;\n\nmsg.params = {\"context\": msg.req.body.context};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 160,
        "wires": [
            [
                "a180bb0f6e06db2c"
            ]
        ]
    },
    {
        "id": "a180bb0f6e06db2c",
        "type": "watson-assistant-v2",
        "z": "1caca5541439e971",
        "name": "ISS Assistant",
        "service-endpoint": "",
        "assistant_id": "",
        "debug": false,
        "restart": false,
        "return_context": true,
        "alternate_intents": false,
        "multisession": true,
        "timeout": "",
        "optout-learning": false,
        "persist-session-id": false,
        "x": 450,
        "y": 160,
        "wires": [
            [
                "ee8855ff002622dc"
            ]
        ]
    },
    {
        "id": "ee8855ff002622dc",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "Generate Timestamp",
        "func": "msg.assistant = msg.payload\nif (msg.payload.intents.length > 0 || msg.payload.entities.length >0){\n msg.payload = (new Date()).getTime()\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 160,
        "wires": [
            [
                "4ebd73ffd8b979a8"
            ]
        ]
    },
    {
        "id": "4ebd73ffd8b979a8",
        "type": "link out",
        "z": "1caca5541439e971",
        "name": "Generate Timestamp OUT",
        "mode": "link",
        "links": [
            "c2069b7096f018e3"
        ],
        "x": 825,
        "y": 160,
        "wires": []
    },
    {
        "id": "4b1a78144348f388",
        "type": "link in",
        "z": "1caca5541439e971",
        "name": "ISS to reverse geocode IN",
        "links": [
            "aab8404c34d054bb"
        ],
        "x": 65,
        "y": 220,
        "wires": [
            [
                "10d8646bfb15b2c4"
            ]
        ]
    },
    {
        "id": "10d8646bfb15b2c4",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "ISS to reverse geocode function",
        "func": "msg.mydata = msg.payload;\n\nmsg.lat = msg.payload.position.lat;\nmsg.lon = msg.payload.position.lon;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 220,
        "wires": [
            [
                "c1c36f5a65a8469e"
            ]
        ]
    },
    {
        "id": "86a85bcda05fcc7d",
        "type": "http request",
        "z": "1caca5541439e971",
        "name": "Get reverse geocode",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "msg.mydata = msg.payload;  msg.lat = msg.payload.position.lat; msg.lon = msg.payload.position.lon;",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 700,
        "y": 220,
        "wires": [
            [
                "10d597e301c1165b"
            ]
        ]
    },
    {
        "id": "10d597e301c1165b",
        "type": "json",
        "z": "1caca5541439e971",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 220,
        "wires": [
            [
                "f08b6d446d2d11e1"
            ]
        ]
    },
    {
        "id": "f08b6d446d2d11e1",
        "type": "link out",
        "z": "1caca5541439e971",
        "name": "JSON OUT",
        "mode": "link",
        "links": [
            "9adf0fb8b79613fa"
        ],
        "x": 965,
        "y": 220,
        "wires": []
    },
    {
        "id": "9adf0fb8b79613fa",
        "type": "link in",
        "z": "1caca5541439e971",
        "name": "Assistant output chat IN",
        "links": [
            "f08b6d446d2d11e1",
            "1979790f81f7a6d4",
            "657577cec5765d8a",
            "cb4ec1558ce402ec",
            "b38f7284d977c2e0"
        ],
        "x": 65,
        "y": 260,
        "wires": [
            [
                "cf8a39e1c4f59a73"
            ]
        ]
    },
    {
        "id": "cf8a39e1c4f59a73",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "Assistant output to chat",
        "func": "\ncurrent_payload = msg.payload;\nmsg.payload = {};\nif (current_payload && current_payload.hasOwnProperty('display_name')){\n    // geocoding response\n    msg.payload.message = \"Currently Location: \" + current_payload.display_name;\n    msg.payload.lat = current_payload.lat;\n    msg.payload.lon = current_payload.lon;\n} else if (current_payload.hasOwnProperty('error')) {\n    // geocoding error\n    msg.payload.message = \"Unknown Location - Probably over the ocean.\";\n\n    var lat_string = msg.mydata.position.lat.toString();\n    msg.payload.lat = Math.round(100*lat_string)/100;\n\n    var lon_string = msg.mydata.position.lon.toString();\n    msg.payload.lon = Math.round(100*lon_string)/100;\n} else {\n    // text-based answer\n    if (msg.mode) {\n        msg.payload.mode = msg.mode;\n    }\n    msg.payload.message = msg.text;\n    msg.payload.lat = undefined;\n    msg.payload.lon = undefined;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 7,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 260,
        "wires": [
            [
                "37a144169919eddc"
            ]
        ]
    },
    {
        "id": "37a144169919eddc",
        "type": "http response",
        "z": "1caca5541439e971",
        "name": "Bot response",
        "statusCode": "200",
        "headers": {},
        "x": 460,
        "y": 260,
        "wires": []
    },
    {
        "id": "c2069b7096f018e3",
        "type": "link in",
        "z": "1caca5541439e971",
        "name": "Assistant Intents IN",
        "links": [
            "4ebd73ffd8b979a8"
        ],
        "x": 25,
        "y": 440,
        "wires": [
            [
                "3184ba124d5407d8"
            ]
        ]
    },
    {
        "id": "3184ba124d5407d8",
        "type": "switch",
        "z": "1caca5541439e971",
        "name": "Assistant Intents",
        "property": "assistant.intents[0].intent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "what",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "where",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "where-historical",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "where-future",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mode-2d",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mode-3d",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 170,
        "y": 440,
        "wires": [
            [
                "22446ae132b96273"
            ],
            [
                "48c55c1ba570a5a1"
            ],
            [
                "0ead5ced44a3d70d"
            ],
            [
                "d70c6e88b49b2b2c"
            ],
            [
                "226e0bd4525f2f3c"
            ],
            [
                "c40c182df30bfde4"
            ]
        ]
    },
    {
        "id": "22446ae132b96273",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "What is the ISS?",
        "func": "msg.text = 'The International Space Station (ISS) is a habitable artificial satellite in low Earth orbit (~400km). It has between 3 and 6 astronauts onboard at any giving time and serves as a microgravity and space environment research laboratory.'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 340,
        "wires": [
            [
                "1979790f81f7a6d4"
            ]
        ]
    },
    {
        "id": "c40c182df30bfde4",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "Define Mode",
        "func": "msg.mode = '2d'\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 540,
        "wires": [
            [
                "cb4ec1558ce402ec"
            ]
        ]
    },
    {
        "id": "87d196a3d290918b",
        "type": "http in",
        "z": "1caca5541439e971",
        "name": "Chat home page",
        "url": "/bot",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 600,
        "wires": [
            [
                "04e0be23a58a6e0a"
            ]
        ]
    },
    {
        "id": "04e0be23a58a6e0a",
        "type": "template",
        "z": "1caca5541439e971",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>\n\t  My BOT\n\t</title>\n\t<link rel=\"stylesheet\"\n        type=\"text/css\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n\t<style>\n    \tbody {\n    \t    font-family: monospace;\n    \t}\n\t    .sat-track {\n\t        display: flex;\n\t        height: 100%;\n            font-family: monospace;\n\t    }\n\n\t    .sat-track--chat {\n\t        width: 30%;\n\t        max-width: 400px;\n\t        border-right: 1px solid #929292;\n\t        display: flex;\n\t        flex-direction: column;\n\t    }\n\n\t    .sat-track--chat--logs {\n\t        flex-grow: 1;\n\t        background-color: #262626;\n\t        height: 70%;\n            overflow-y: scroll;\n\t    }\n\n\t    .sat-track--chat--message {\n            width: 100%;\n            margin-top: 12px;\n            display: flex;\n\t    }\n\n\t    .sat-track--chat--message div {\n\t        border-radius: 6px;\n            width: 60%;\n            color: white;\n            padding: 6px 12px;\n\t    }\n\n\t    .sat-track--chat--you div {\n\t        background-color: #4eb8ff;\n            margin-left: 6px;\n            border-bottom-left-radius: 0px;\n\t    }\n\n\t    .sat-track--chat--bot,\n\t    .sat-track--chat--error {\n\t        flex-direction: row-reverse;\n\t    }\n\n\t    .sat-track--chat--bot div,\n\t    .sat-track--chat--error div {\n\t        background-color: #97b83a;\n            margin-right: 6px;\n            border-bottom-right-radius: 0px;\n\t    }\n\n\t    .sat-track--chat--error div {\n\t        background-color: #cc5f5f;\n\t    }\n\n\t    .sat-track--chat form {\n\t        background-color: #141414;\n            margin-bottom: 0px;\n            color: white;\n\t    }\n\n\t    .sat-track--chat label {\n\t        display: block;\n            padding: 6px;\n            margin-bottom: 0px;\n            border-bottom: 1px solid #434343;\n\t    }\n\n\t    .sat-track--chat textarea {\n    \t    resize: none;\n            width: 100%;\n            min-height: 50px;\n            color: black;\n            padding: 6px;\n\t    }\n\n\t    .sat-track--chat button {\n    \t    width: 100%;\n            padding: 6px 6px;\n            font-size: 12pt;\n            background: #268cb4;\n            border: 1px solid #02b8ff;\n            color: white;\n\t    }\n\n\t    .sat-track--chat button:hover {\n\t        cursor: pointer;\n            background: #97b83a;\n            border: 1px solid #02b8ff;\n            color: white;\n\t    }\n\n\t    h1 {\n\t        margin: 0px;\n            background-color: black;\n            color: #eee;\n            padding: 12px 6px;\n            font-size: 16pt;\n            border-bottom: 1px solid #00b8ff;\n\t    }\n\n\t    .sat-track--map {\n\t        width: 100%;\n\t    }\n\n\t    .sat-track--map iframe {\n\t        width: 100%;\n\t        height: 100%;\n\t    }\n\n\t    .sat-track--map small {\n\t        position: absolute;\n            bottom: 0px;\n\t    }\n\n\t</style>\n  </head>\n  <body>\n\n    <div class=\"container\">\n      <div id=\"no-script\"class=\"bg-info\">\n        This application needs JavaScript enabled in your browser!\n      </div>\n      <div id=\"id_contextdump\"></div>\n    </div>\n\n    <div class=\"sat-track\">\n        <div class=\"sat-track--chat\">\n            <h1>ISS Tracker BOT</h1>\n            <div class=\"sat-track--chat--logs\" id=\"id_botchathistory\"></div>\n    \t    <div>\n    \t        <form>\n                  <label for=\"id_chattext\">Your Input: </label>\n                  <textarea type=\"text\" name=\"chattext\" id=\"id_chattext\"></textarea>\n    \t        </form>\n    \t        <button onclick=\"javascript:onChatClick()\" id=\"id_enter\">Send</button>\n    \t    </div>\n        </div>\n        <div class=\"sat-track--map\" id=\"WorldMap\">\n            <iframe id=\"mode-iframe\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"./worldmap\"></iframe>\n            <br /><small><a id=\"mode-link\" href=\"./worldmap\" style=\"color:#0000FF;text-align:left\">View Larger Map</a></small>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.1.4.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n    <script>\n        $(document).ready(function() {\n            javascriptCheck();\n            $('#id_contextdump').hide();\n            enterbutton();\n            //invokeAjax (\"Hello\");\n        });\n\n        // if javascript is enabled on the browser then can remove the warning message\n        function javascriptCheck() {\n            $('#no-script').remove();\n        }\n\n        // creates div for interaction with bot\n        function createNewDiv(who, message) {\n            var txt = who + ': ' + message;\n            var container;\n            if (who == 'You') {\n                container = $('<div class=\"sat-track--chat--message sat-track--chat--you\"></div>');\n            } else if (who == 'Error') {\n                container = $('<div class=\"sat-track--chat--message sat-track--chat--error\"></div>');\n            } else {\n                container = $('<div class=\"sat-track--chat--message sat-track--chat--bot\"></div>');\n            }\n            container.append($('<div></div>').text(txt))\n            return container;\n\n        }\n\n        // appends latest communication with bot to botchathistory\n        function chat(person, txt) {\n            $('#id_botchathistory').append(createNewDiv(person, txt));\n        }\n\n        // sets pressing of enter key to perform same action as send button\n        function enterbutton(){\n            $(function() {\n                $(\"form textarea\").keypress(function (e) {\n                if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {\n                     $('#id_enter').click();\n                     return false;\n                } else {\n                return true;\n                }\n             });\n            });\n        }\n\n        // User has entered some text.\n        function onChatClick() {\n            var txt = $('#id_chattext').val();\n            chat('You', txt);\n            invokeAjax(txt);\n            $('#id_chattext').val('');\n        }\n\n        function switchMode(mode) {\n            if (mode === '3d') {\n                document.getElementById('mode-iframe').src = './earth'\n                document.getElementById('mode-link').href = './earth'\n            } else {\n                document.getElementById('mode-iframe').src = './worldmap'\n                document.getElementById('mode-link').href = './worldmap'\n            }\n\n        }\n\n        function processOK(response) {\n            console.log(response);\n\n            if (response.mode) {\n                switchMode(response.mode)\n                chat('Bot', 'Mode Changed to ' + response.mode)\n            } else {\n                chat('Bot', response.message);\n                if (response.lat && response.lon) {\n                    // sometimes text response only\n                    chat('Bot', \"Latitude: \" + response.lat);\n                    chat('Bot', \"Longitude: \" + response.lon);\n                }\n            }\n            // $('#id_contextdump').data('convContext', response.botresponse.messageout.context);\n        }\n\n        function processNotOK() {\n            chat('Error', 'Error whilst attempting to talk to Bot');\n        }\n\n        function invokeAjax(message) {\n            // var contextdata = $('#id_contextdump').data('convContext');\n            // console.error('checking stashed context data');\n            // console.error(contextdata);\n\n            var ajaxData = {};\n            ajaxData.msgdata = message;\n            // if (contextdata) {\n            //     ajaxData.context = contextdata;\n            // }\n\n            $.ajax({\n                type: 'POST',\n                url: 'botchat',\n                data: ajaxData,\n                success: processOK,\n                error: processNotOK\n            });\n        }\n    </script>\n  </body>\n</html>",
        "output": "str",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "6ce55be47a71ca45"
            ]
        ]
    },
    {
        "id": "6ce55be47a71ca45",
        "type": "http response",
        "z": "1caca5541439e971",
        "name": "Chat http response",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 600,
        "wires": []
    },
    {
        "id": "b9e65ca0a41fd010",
        "type": "link in",
        "z": "1caca5541439e971",
        "name": "ISS to Map IN",
        "links": [
            "aab8404c34d054bb",
            "657577cec5765d8a"
        ],
        "x": 105,
        "y": 740,
        "wires": [
            [
                "3478080444fcfb80"
            ]
        ]
    },
    {
        "id": "3478080444fcfb80",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "ISS to map",
        "func": "msg.mydata = msg.payload;\n\nvar time = new Date(msg.mydata.timestamp)\nmsg.payload = {};\nmsg.payload.name = \"ISS @ \" + time.getHours() + ':' + time.getMinutes() + ' on ' + (1 + time.getMonth()) + '/' + time.getDate() + '/' + time.getFullYear();\nmsg.payload.lat = Math.round(100 * msg.mydata.position.lat)/100;\nmsg.payload.lon = Math.round(100 * msg.mydata.position.lon)/100;\nmsg.payload.layer = \"ISS\";\nmsg.payload.zoom = 15;\nmsg.payload.icon = \"iss\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "2a97950cb46b9ece",
                "a01e924b6221e69d"
            ]
        ]
    },
    {
        "id": "2a97950cb46b9ece",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "move and zoom",
        "func": "msg.payload = { command:{layer:\"Esri Terrain\",lat:msg.payload.lat,lon:msg.payload.lon,zoom:4} };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 720,
        "wires": [
            [
                "005520d941132d75"
            ]
        ]
    },
    {
        "id": "005520d941132d75",
        "type": "worldmap",
        "z": "1caca5541439e971",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "false",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN",
        "maplist": "OSMG,OSMC,EsriC,EsriS,UKOS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 620,
        "y": 740,
        "wires": []
    },
    {
        "id": "6a91cb851ce6dd66",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "add map layer",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 660,
        "wires": [
            [
                "005520d941132d75"
            ]
        ]
    },
    {
        "id": "d9550e3ad4c9a3d6",
        "type": "inject",
        "z": "1caca5541439e971",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "6a91cb851ce6dd66"
            ]
        ]
    },
    {
        "id": "a01e924b6221e69d",
        "type": "worldmap-tracks",
        "z": "1caca5541439e971",
        "name": "",
        "depth": 20,
        "layer": "combined",
        "smooth": false,
        "x": 410,
        "y": 760,
        "wires": [
            [
                "005520d941132d75"
            ]
        ]
    },
    {
        "id": "7bb2608eaf8fa67e",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "ISS Path to Line",
        "func": "points = [];\n\nmsg.payload.forEach(function(p) {\n    points.push([p.position.lat, p.position.lon])\n})\n\nmsg.payload = {\n    name: 'Path',\n    line: points,\n    layer: \"ISS\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 820,
        "wires": [
            [
                "005520d941132d75"
            ]
        ]
    },
    {
        "id": "5d44125ee431ef93",
        "type": "link in",
        "z": "1caca5541439e971",
        "name": "ISS Path to Line IN",
        "links": [
            "657577cec5765d8a"
        ],
        "x": 265,
        "y": 820,
        "wires": [
            [
                "7bb2608eaf8fa67e",
                "1faf70481dc8e896"
            ]
        ]
    },
    {
        "id": "226e0bd4525f2f3c",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "Define Mode",
        "func": "msg.mode = '2d'\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 500,
        "wires": [
            [
                "b38f7284d977c2e0"
            ]
        ]
    },
    {
        "id": "58ab8a9541a3da64",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "Define Text",
        "func": "msg.text = 'Showing Last 10 Mins'\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "a488ea088e52f232"
            ]
        ]
    },
    {
        "id": "03662f559e405b3a",
        "type": "function",
        "z": "1caca5541439e971",
        "name": "Define Text",
        "func": "msg.text = 'Showing Last 10 Mins'\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 480,
        "wires": [
            [
                "a488ea088e52f232"
            ]
        ]
    },
    {
        "id": "1979790f81f7a6d4",
        "type": "link out",
        "z": "1caca5541439e971",
        "name": "What is ISS OUT",
        "mode": "link",
        "links": [
            "9adf0fb8b79613fa"
        ],
        "x": 575,
        "y": 340,
        "wires": []
    },
    {
        "id": "aab8404c34d054bb",
        "type": "link out",
        "z": "1caca5541439e971",
        "name": "ISS Location OUT",
        "mode": "link",
        "links": [
            "4b1a78144348f388",
            "b9e65ca0a41fd010"
        ],
        "x": 575,
        "y": 380,
        "wires": []
    },
    {
        "id": "c1c36f5a65a8469e",
        "type": "credentials",
        "z": "1caca5541439e971",
        "name": "",
        "props": [
            {
                "value": "API_key",
                "type": "msg"
            }
        ],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "86a85bcda05fcc7d"
            ]
        ]
    },
    {
        "id": "48c55c1ba570a5a1",
        "type": "satellite",
        "z": "1caca5541439e971",
        "sattype": "stations",
        "satid": "ISS (ZARYA)",
        "name": "",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "aab8404c34d054bb"
            ]
        ]
    },
    {
        "id": "0ead5ced44a3d70d",
        "type": "timearray",
        "z": "1caca5541439e971",
        "plus": 0,
        "minus": "10",
        "samples": "20",
        "name": "Last 10 mins",
        "x": 410,
        "y": 420,
        "wires": [
            [
                "58ab8a9541a3da64"
            ]
        ]
    },
    {
        "id": "d70c6e88b49b2b2c",
        "type": "timearray",
        "z": "1caca5541439e971",
        "plus": 0,
        "minus": 0,
        "samples": "20",
        "name": "Next 10 mins",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "03662f559e405b3a"
            ]
        ]
    },
    {
        "id": "a488ea088e52f232",
        "type": "satellite",
        "z": "1caca5541439e971",
        "sattype": "stations",
        "satid": "ISS (ZARYA)",
        "name": "",
        "x": 770,
        "y": 460,
        "wires": [
            [
                "657577cec5765d8a"
            ]
        ]
    },
    {
        "id": "1faf70481dc8e896",
        "type": "earth",
        "z": "1caca5541439e971",
        "name": "",
        "x": 410,
        "y": 880,
        "wires": []
    },
    {
        "id": "657577cec5765d8a",
        "type": "link out",
        "z": "1caca5541439e971",
        "name": "ISS 2 OUT",
        "mode": "link",
        "links": [
            "5d44125ee431ef93",
            "9adf0fb8b79613fa",
            "b9e65ca0a41fd010"
        ],
        "x": 895,
        "y": 460,
        "wires": []
    },
    {
        "id": "cb4ec1558ce402ec",
        "type": "link out",
        "z": "1caca5541439e971",
        "name": "Define Mode 3d OUT",
        "mode": "link",
        "links": [
            "9adf0fb8b79613fa"
        ],
        "x": 515,
        "y": 540,
        "wires": []
    },
    {
        "id": "b38f7284d977c2e0",
        "type": "link out",
        "z": "1caca5541439e971",
        "name": "Define Mode 2d OUT",
        "mode": "link",
        "links": [
            "9adf0fb8b79613fa"
        ],
        "x": 515,
        "y": 500,
        "wires": []
    }
]